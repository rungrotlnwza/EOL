// Profile Management Logic
export function setupProfileManager() {
    console.log('üîß ProfileManager: Initializing...');
    // ====== ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å API ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• ======
    async function loadUserProfile(forceRefresh = false) {
        const token = localStorage.getItem('token');
        if (!token) return;

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö cache ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        const cachedData = localStorage.getItem('profileData');
        const cacheTime = localStorage.getItem('profileCacheTime');
        const CACHE_DURATION = 5 * 60 * 1000; // 5 ‡∏ô‡∏≤‡∏ó‡∏µ

        if (!forceRefresh && cachedData && cacheTime) {
            const timeDiff = Date.now() - parseInt(cacheTime);
            if (timeDiff < CACHE_DURATION) {
                // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å cache
                console.log('Using cached profile data');
                try {
                    const data = JSON.parse(cachedData);
                    if (data.profile) {
                        renderProfile(data.profile);
                        return; // ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÉ‡∏ä‡πâ cache ‡πÅ‡∏•‡πâ‡∏ß
                    }
                } catch (e) {
                    console.warn('Invalid cached data, will fetch from API');
                }
            }
        }

        // ‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å API ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ cache ‡∏´‡∏£‡∏∑‡∏≠ cache ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
        console.log('Fetching profile data from API');

        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà cache ‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö merge (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        let cachedProfile = null;
        if (cachedData) {
            try {
                cachedProfile = JSON.parse(cachedData).profile;
            } catch (e) {
                console.warn('Invalid cached profile data for merge');
            }
        }

        try {
            const res = await fetch('/api/getUserProfile', {
                method: 'POST',
                headers: { 'Authorization': 'Bearer ' + token }
            });
            const data = await res.json();
            if (data.status === 'success' && data.profile) {
                // Merge ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà cache ‡πÑ‡∏ß‡πâ (‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà)
                const mergedProfile = {
                    ...cachedProfile, // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà cache ‡πÑ‡∏ß‡πâ
                    ...data.profile,  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å API (‡∏à‡∏∞ override ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤)
                    // ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏ó‡∏µ‡πà cache ‡πÑ‡∏ß‡πâ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô null/empty
                    date_of_birth: data.profile.date_of_birth || cachedProfile?.date_of_birth || null
                };

                console.log('Cached date_of_birth:', cachedProfile?.date_of_birth);
                console.log('API date_of_birth:', data.profile.date_of_birth);
                console.log('Merged date_of_birth:', mergedProfile.date_of_birth);

                const mergedData = {
                    ...data,
                    profile: mergedProfile
                };

                // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å cache ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏ß‡∏•‡∏≤
                localStorage.setItem('profileData', JSON.stringify(mergedData));
                localStorage.setItem('profileCacheTime', Date.now().toString());

                renderProfile(mergedProfile);
            } else {
                alert('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ' + data.message);
                console.error('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', data);
                localStorage.removeItem('token');
                window.location.href = '/login';
            }
        } catch (err) {
            console.error('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err);
            alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå');
            localStorage.removeItem('token');
            window.location.href = '/login';
        }
    }

    function renderProfile(p) {
        document.getElementById('profile-fullname').textContent = `${p.first_name || ''} ${p.last_name || ''}`;
        document.getElementById('profile-role-label').textContent = p.role === 'admin' ? '‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô' : '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ';
        document.getElementById('profile-role-badge').textContent = '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ' + (p.role === 'admin' ? 'Admin' : 'User');
        document.getElementById('profile-role-desc').textContent =
            p.role === 'admin'
                ? '‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î'
                : '‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô';
        document.getElementById('profile-username').textContent = p.username || '-';
        document.getElementById('profile-fname').textContent = p.first_name || '-';
        document.getElementById('profile-lname').textContent = p.last_name || '-';
        document.getElementById('profile-gender').textContent = p.gender || '-';
        const profileDobElem = document.getElementById('profile-dob');
        if (profileDobElem) {
            profileDobElem.textContent = p.date_of_birth ? new Date(p.date_of_birth).toLocaleDateString('en-CA') : '-';
        }
        document.getElementById('profile-education').textContent = p.education || '-';
        document.getElementById('profile-address').textContent = p.address || '-';
        document.getElementById('profile-email').textContent = p.email || '-';
        document.getElementById('profile-phone').textContent = p.phone || '-';

        // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ñ‡πâ‡∏≤‡∏°‡∏µ (‡πÉ‡∏ä‡πâ base64 data ‡∏à‡∏≤‡∏Å API)
        const profileAvatar = document.getElementById('profile-avatar');
        if (p.profile_image_data) {
            // ‡πÉ‡∏ä‡πâ base64 data URL ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å getUserProfile API
            profileAvatar.src = p.profile_image_data;

            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡πÉ‡∏ô update form ‡∏î‡πâ‡∏ß‡∏¢
            const currentImagePreview = document.getElementById('current-image-preview');
            const currentImageContainer = document.getElementById('current-profile-image');
            if (currentImagePreview && currentImageContainer) {
                currentImagePreview.src = p.profile_image_data;
                currentImageContainer.style.display = 'block';
            }
        } else {
            // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ default
            profileAvatar.src = 'https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava3.webp';
        }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
    function setupUpdateProfileForm() {
        console.log('üìù ProfileManager: Setting up update profile form...');
        // ‡∏£‡∏≠‡πÉ‡∏´‡πâ DOM ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô
        setTimeout(() => {
            const updateForm = document.getElementById('updateProfileForm');
            const loadDataBtn = document.getElementById('loadCurrentDataBtn');
            const updateStatus = document.getElementById('updateStatus');
            const profileImageInput = document.getElementById('profile-image');
            const newImagePreview = document.getElementById('new-image-preview');
            const newImageContainer = document.getElementById('new-profile-image-preview');

            if (!updateForm) {
                console.warn('‚ùå ProfileManager: Update profile form not found');
                return;
            } else {
                console.log('‚úÖ ProfileManager: Update profile form found');
            }

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö required elements
            const requiredElements = [
                'update-fname', 'update-lname', 'update-email', 'update-phone',
                'update-gender', 'update-dob', 'update-education', 'update-address'
            ];

            const missingElements = requiredElements.filter(id => !document.getElementById(id));
            if (missingElements.length > 0) {
                console.warn('‚ùå ProfileManager: Missing form elements:', missingElements);
                return;
            } else {
                console.log('‚úÖ ProfileManager: All form elements found');
            }

            // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
            function loadDataToForm() {
                const profileData = localStorage.getItem('profileData');
                if (profileData) {
                    const data = JSON.parse(profileData);
                    const profile = data.profile;

                    console.log('Loading data to form, date_of_birth:', profile.date_of_birth);

                    document.getElementById('update-fname').value = profile.first_name || '';
                    document.getElementById('update-lname').value = profile.last_name || '';
                    document.getElementById('update-email').value = profile.email || '';
                    document.getElementById('update-phone').value = profile.phone || '';
                    document.getElementById('update-gender').value = profile.gender || '';

                    // --- Date of Birth: format for <input type="date"> ---
                    let dobValue = '';
                    if (profile.date_of_birth) {
                        // Handle ISO string with time (e.g. 2002-06-25T17:00:00.000Z)
                        const d = new Date(profile.date_of_birth);
                        if (!isNaN(d)) {
                            dobValue = d.toISOString().slice(0, 10); // yyyy-MM-dd
                        }
                    }
                    document.getElementById('update-dob').value = dobValue;
                    console.log('Form date_of_birth field value before loading:', document.getElementById('update-dob').value);

                    document.getElementById('update-education').value = profile.education || '';
                    document.getElementById('update-address').value = profile.address || '';
                    // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ñ‡πâ‡∏≤‡∏°‡∏µ (‡πÉ‡∏ä‡πâ base64 data)
                    if (profile.profile_image_data) {
                        const currentImagePreview = document.getElementById('current-image-preview');
                        const currentImageContainer = document.getElementById('current-profile-image');
                        if (currentImagePreview && currentImageContainer) {
                            currentImagePreview.src = profile.profile_image_data;
                            currentImageContainer.style.display = 'block';
                        }
                    }

                    return true;
                }
                return false;
            }

            // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà
            if (profileImageInput) {
                profileImageInput.addEventListener('change', function (e) {
                    const file = e.target.files[0];
                    if (file) {
                        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå
                        if (!file.type.startsWith('image/')) {
                            alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
                            e.target.value = '';
                            if (newImageContainer) newImageContainer.style.display = 'none';
                            return;
                        }

                        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå (5MB)
                        if (file.size > 5 * 1024 * 1024) {
                            alert('‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5MB');
                            e.target.value = '';
                            if (newImageContainer) newImageContainer.style.display = 'none';
                            return;
                        }

                        // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏π‡∏õ
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            if (newImagePreview) {
                                newImagePreview.src = e.target.result;
                                if (newImageContainer) newImageContainer.style.display = 'block';
                            }
                        };
                        reader.readAsDataURL(file);
                    } else {
                        if (newImageContainer) newImageContainer.style.display = 'none';
                    }
                });
            }

            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤ tab
            setTimeout(() => {
                loadDataToForm();
            }, 200);

            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏•‡∏á‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° (force refresh ‡∏à‡∏≤‡∏Å API)
            if (loadDataBtn) {
                loadDataBtn.addEventListener('click', async function () {
                    // ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
                    loadDataBtn.disabled = true;
                    loadDataBtn.textContent = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...';

                    try {
                        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å API (force refresh)
                        await loadUserProfile(true);

                        // ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
                        setTimeout(() => {
                            if (loadDataToForm()) {
                                alert('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
                            } else {
                                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
                            }
                        }, 500);

                    } catch (error) {
                        console.error('Error loading profile:', error);
                        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
                    } finally {
                        // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö
                        loadDataBtn.disabled = false;
                        loadDataBtn.textContent = '‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô';
                    }
                });
            }

            // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
            updateForm.addEventListener('submit', async function (e) {
                e.preventDefault();

                const token = localStorage.getItem('token');
                if (!token) {
                    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà');
                    window.location.href = '/login';
                    return;
                }

                // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
                updateStatus.style.display = 'block';
                const alertDiv = updateStatus.querySelector('.alert') || updateStatus;
                alertDiv.className = 'alert alert-info';
                alertDiv.textContent = '‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...';

                // ‡∏™‡∏£‡πâ‡∏≤‡∏á FormData ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå
                const formData = new FormData();
                formData.append('first_name', document.getElementById('update-fname').value.trim());
                formData.append('last_name', document.getElementById('update-lname').value.trim());
                formData.append('email', document.getElementById('update-email').value.trim());
                formData.append('phone', document.getElementById('update-phone').value.trim());
                formData.append('gender', document.getElementById('update-gender').value);
                formData.append('date_of_birth', document.getElementById('update-dob').value);
                formData.append('education', document.getElementById('update-education').value);
                formData.append('address', document.getElementById('update-address').value.trim());

                // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                const profileImageFile = profileImageInput.files[0];
                if (profileImageFile) {
                    formData.append('profile_image', profileImageFile);
                }

                try {
                    const response = await fetch('/api/updateUserProfile', {
                        method: 'POST',
                        headers: {
                            'Authorization': 'Bearer ' + token
                            // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà Content-Type ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ FormData ‡∏à‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏á
                        },
                        body: formData
                    });

                    const result = await response.json();

                    if (response.ok && result.status === 'success') {
                        alertDiv.className = 'alert alert-success';
                        alertDiv.textContent = '‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå...';

                        // Cache ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
                        const currentProfileData = localStorage.getItem('profileData');
                        let updatedProfileData = null;

                        if (currentProfileData) {
                            try {
                                const currentData = JSON.parse(currentProfileData);

                                // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡∏°‡πà
                                const formBirthDate = document.getElementById('update-dob').value;
                                console.log('Form date_of_birth before update:', formBirthDate);
                                console.log('Current cached date_of_birth:', currentData.profile?.date_of_birth);

                                updatedProfileData = {
                                    ...currentData,
                                    profile: {
                                        ...currentData.profile,
                                        first_name: document.getElementById('update-fname').value.trim() || currentData.profile?.first_name,
                                        last_name: document.getElementById('update-lname').value.trim() || currentData.profile?.last_name,
                                        email: document.getElementById('update-email').value.trim() || currentData.profile?.email,
                                        phone: document.getElementById('update-phone').value.trim() || currentData.profile?.phone,
                                        gender: document.getElementById('update-gender').value || currentData.profile?.gender,
                                        // ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà cache ‡πÑ‡∏ß‡πâ
                                        date_of_birth: formBirthDate || currentData.profile?.date_of_birth || null,
                                        education: document.getElementById('update-education').value || currentData.profile?.education,
                                        address: document.getElementById('update-address').value.trim() || currentData.profile?.address
                                    }
                                };

                                console.log('Updated date_of_birth will be:', updatedProfileData.profile.date_of_birth);

                                // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ localStorage ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï cache time
                                localStorage.setItem('profileData', JSON.stringify(updatedProfileData));
                                localStorage.setItem('profileCacheTime', Date.now().toString());

                            } catch (e) {
                                console.error('Error processing profile data during update:', e);
                            }
                        }

                        // redirect ‡πÑ‡∏õ‡∏ó‡∏µ‡πà dashboard#profile ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏•‡∏ö profileData ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß
                        setTimeout(() => {
                            window.location.href = '/dashboard#profile';
                        }, 1500);

                    } else {
                        alertDiv.className = 'alert alert-danger';
                        alertDiv.textContent = `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${result.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ'}`;
                    }
                } catch (error) {
                    console.error('Update profile error:', error);
                    alertDiv.className = 'alert alert-danger';
                    alertDiv.textContent = '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå';
                }
            });
        }, 100); // ‡∏õ‡∏¥‡∏î setTimeout
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô global ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡πâ‡∏≤‡∏á cache (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö debug)
    window.clearProfileCache = function () {
        localStorage.removeItem('profileData');
        localStorage.removeItem('profileCacheTime');
        console.log('Profile cache cleared');
    };

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô global ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π cache info
    window.getCacheInfo = function () {
        const cacheTime = localStorage.getItem('profileCacheTime');
        const cacheData = localStorage.getItem('profileData');
        if (cacheTime && cacheData) {
            const age = Date.now() - parseInt(cacheTime);
            console.log('Cache age:', Math.round(age / 1000), 'seconds');
            console.log('Cache data:', JSON.parse(cacheData));
        } else {
            console.log('No cache found');
        }
    };

    // Initialize profile management
    console.log('üöÄ ProfileManager: Loading user profile...');
    loadUserProfile();
    console.log('üöÄ ProfileManager: Setting up update profile form...');
    setupUpdateProfileForm();
    console.log('‚úÖ ProfileManager: Initialization complete');

    // Export loadUserProfile for use by other modules
    return {
        loadUserProfile
    };
}
